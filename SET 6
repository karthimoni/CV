1.VDO FROM WEBCAM TO SLOW AND FAST MOTION
import cv2
cap = cv2.VideoCapture("C:/Users/REVANTH SANTHIPRASAD/OneDrive/Desktop/monica/CV/vdo.mp4")
frame_rate = 30 
while True:
    ret, frame = cap.read()
    cv2.imshow('Video', frame)
    key = cv2.waitKey(1) & 0xFF
    if key == ord('q'):
        break
    elif key == ord('s'):
        frame_rate = max(1, frame_rate - 5)  
    elif key == ord('f'):
        frame_rate += 5  
    delay = int(1000 / frame_rate)
    if cv2.waitKey(delay) & 0xFF == ord('q'):
        break
cap.release()
cv2.destroyAllWindows()

2.HOMOGARPHY MATRIX
import cv2
import numpy as np
source_image = cv2.imread("C:/Users/REVANTH SANTHIPRASAD/OneDrive/Desktop/monica/CV/im.jpg")
destination_image = cv2.imread("C:/Users/REVANTH SANTHIPRASAD/OneDrive/Desktop/monica/CV/image.jpg")
src_pts = np.array([[0, 0],[source_image.shape[1] - 1, 0],[source_image.shape[1] - 1, source_image.shape[0] - 1],[0, source_image.shape[0] - 1]],dtype=np.float32)
des_pts = np.array([[50, 50], [300, 100], [300, 250], [50, 200]], dtype=np.float32)
homography_matrix, _ = cv2.findHomography(src_pts, des_pts)
transformed_image = cv2.warpPerspective(source_image,homography_matrix,(destination_image.shape[1],destination_image.shape[0]))
result = cv2.addWeighted(transformed_image, 0.5,destination_image, 0.5, 0)
cv2.imshow('Result', result)
cv2.waitKey(0)
cv2.destroyAllWindows()

3.MORPHO OPER TOPHAT
import cv2
import numpy as np
img = cv2.imread("C:/Users/REVANTH SANTHIPRASAD/OneDrive/Desktop/monica/CV/im.jpg", cv2.IMREAD_GRAYSCALE)
kernel = np.ones((5,5), np.uint8)
tophat = cv2.morphologyEx(img, cv2.MORPH_TOPHAT, kernel)
cv2.imshow("Original", img)
cv2.imshow("Top Hat", tophat)
cv2.waitKey(0)
cv2.destroyAllWindows()

4.ROTATION 
import cv2
original_image = cv2.imread("C:/Users/REVANTH SANTHIPRASAD/OneDrive/Desktop/monica/CV/im.jpg")
clockwise_rotated_image = cv2.rotate(original_image, cv2.ROTATE_90_CLOCKWISE)
counterclockwise_rotated_image = cv2.rotate(original_image, cv2.ROTATE_90_COUNTERCLOCKWISE)
cv2.imshow('Clockwise Rotated Image', clockwise_rotated_image)
cv2.imshow('Counterclockwise Rotated Image', counterclockwise_rotated_image)
cv2.waitKey(0)
cv2.destroyAllWindows()
